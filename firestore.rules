/**
 * @file Firebase Security Rules for balanceUp handball club app
 * @updated 2025-10-27 - PRD-01 Firebase Infrastructure Setup
 *
 * Core Philosophy:
 * - Team-wide read access for transparency (handball club team roster)
 * - Write access restricted to admins (team managers/treasurers)
 * - Top-level collections for better query performance
 *
 * Data Structure:
 * - /users/{userId}: User profiles (players)
 * - /fines/{fineId}: Top-level fines collection
 * - /payments/{paymentId}: Top-level payments collection
 * - /beverages/{beverageId}: Beverage catalog
 * - /beverageConsumptions/{consumptionId}: Beverage consumption records
 * - /dues/{dueId}: Team dues (season fees, events, etc.)
 * - /duePayments/{paymentId}: Due payment records
 * - /transactions/{transactionId}: Transaction history
 * - /predefinedFines/{fineId}: Fine templates
 * - /auditLogs/{logId}: Audit trail
 * - /admins/{userId}: Admin role management
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============================================
    // HELPER FUNCTIONS
    // ============================================

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if user exists in admins collection
      // To create an admin: manually add document to /admins/{uid} in Firebase Console
      return isSignedIn() &&
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // ============================================
    // USERS (Players)
    // ============================================

    match /users/{userId} {
      // Team-wide read access (transparency for team roster)
      allow get, list: if isSignedIn();

      // Only owner or admin can create/update profile
      allow create: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) || isAdmin();

      // Only admin can delete players
      allow delete: if isAdmin();
    }

    // ============================================
    // FINES (Top-level collection)
    // ============================================

    match /fines/{fineId} {
      // Team-wide read access (everyone can see fines)
      allow get, list: if isSignedIn();

      // Only admins can create, update, or delete fines
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // PAYMENTS (Top-level collection)
    // ============================================

    match /payments/{paymentId} {
      // Team-wide read access
      allow get, list: if isSignedIn();

      // Only admins can manage payments
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // BEVERAGES (Catalog)
    // ============================================

    match /beverages/{beverageId} {
      // Everyone can read the beverage catalog
      allow get, list: if isSignedIn();

      // Only admins can manage catalog
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // BEVERAGE CONSUMPTIONS
    // ============================================

    match /beverageConsumptions/{consumptionId} {
      // Team-wide read access
      allow get, list: if isSignedIn();

      // Only admins can manage consumption records
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // DUES (Team fees, events, etc.)
    // ============================================

    match /dues/{dueId} {
      // Everyone can read dues
      allow get, list: if isSignedIn();

      // Only admins can create/update/delete dues
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // DUE PAYMENTS
    // ============================================

    match /duePayments/{paymentId} {
      // Team-wide read access
      allow get, list: if isSignedIn();

      // Only admins can manage due payments
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // TRANSACTIONS (History/Ledger)
    // ============================================

    match /transactions/{transactionId} {
      // Team-wide read access
      allow get, list: if isSignedIn();

      // Only admins can create transactions
      allow create: if isAdmin();

      // Transactions are immutable once created
      allow update, delete: if false;
    }

    // ============================================
    // PREDEFINED FINES (Templates)
    // ============================================

    match /predefinedFines/{fineId} {
      // Everyone can read fine templates
      allow get, list: if isSignedIn();

      // Only admins can manage templates
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // AUDIT LOGS
    // ============================================

    match /auditLogs/{logId} {
      // Only admins can read audit logs
      allow get, list: if isAdmin();

      // Only admins can create audit logs
      allow create: if isAdmin();

      // Audit logs are immutable
      allow update, delete: if false;
    }

    // ============================================
    // ADMIN MANAGEMENT
    // ============================================

    match /admins/{adminId} {
      // Anyone can read who the admins are (transparency)
      allow get, list: if isSignedIn();

      // Admin role can only be managed via Firebase Console or Admin SDK
      // No write access from client
      allow create, update, delete: if false;
    }
  }
}